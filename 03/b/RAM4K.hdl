// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:

	DMux8Way( in=load, sel= address[0..2], a=ina, b=inb, c=inc, d=ind, e=ine, f=inf, g=ing, h=inh);

	
    	RAM512(in=in, load=ina, address=address[3..11], out=outa);
    	RAM512(in=in, load=inb, address=address[3..11], out=outb);
    	RAM512(in=in, load=inc, address=address[3..11], out=outc);
    	RAM512(in=in, load=ind, address=address[3..11], out=outd);
    	RAM512(in=in, load=ine, address=address[3..11], out=oute);
   	RAM512(in=in, load=inf, address=address[3..11], out=outf);
        RAM512(in=in, load=ing, address=address[3..11], out=outg);
        RAM512(in=in, load=inh, address=address[3..11], out=outh);

	Mux8Way16(a=outa, b=outb, c=outc, d=outd, e=oute, f=outf, g=outg, h=outh, sel=address[0..2], out=out);
    // Put your code here:
}